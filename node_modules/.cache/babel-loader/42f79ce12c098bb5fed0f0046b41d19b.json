{"ast":null,"code":"var _jsxFileName = \"/home/amasuo/Front-TODO/src/taskboard/TaskboardItemCard.tsx\";\nimport React from 'react';\nimport { Button, Card, Modal, Typography, Dropdown, Menu } from 'antd';\nimport { DeleteOutlined, EditOutlined, MoreOutlined } from '@ant-design/icons';\nimport { red } from '@ant-design/colors';\nimport styled from 'styled-components';\nimport BaseTooltip from '../shared/BaseTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)`\n  margin: 0.5rem;\n  padding: 0.5rem;\n  background-color: ${({\n  $isDragging\n}) => $isDragging ? '#fafafa' : '#fff'};\n`;\n_c = StyledCard;\nconst TaskboardItemCardTitle = styled(Typography.Title)`\n  white-space: pre-wrap;\n  // To make ellipsis of the title visible.\n  // Without this margin, it can be go behind the \"extra\" component.\n  // So, we give it a little space.\n  margin-right: 0.25rem;\n`;\n_c2 = TaskboardItemCardTitle;\nconst DeleteMenuItem = styled(Menu.Item)`\n  color: ${red.primary};\n`;\n_c3 = DeleteMenuItem;\n\nfunction TaskboardItemCard({\n  item,\n  status,\n  isDragging,\n  onEdit,\n  onDelete\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    $isDragging: isDragging,\n    size: \"small\",\n    title: /*#__PURE__*/_jsxDEV(BaseTooltip, {\n      overlay: item.title,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(TaskboardItemCardTitle, {\n          level: 5,\n          ellipsis: {\n            rows: 2\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this),\n    extra: /*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 32\n          }, this),\n          onClick: () => onEdit(item),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DeleteMenuItem, {\n          icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this),\n          onClick: () => Modal.confirm({\n            title: 'Delete?',\n            content: `Are you sure to delete \"${item.title}\"?`,\n            onOk: () => onDelete({\n              status,\n              itemToDelete: item\n            })\n          }),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this),\n      trigger: ['click'],\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        icon: /*#__PURE__*/_jsxDEV(MoreOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(BaseTooltip, {\n      overlay: item.description,\n      children: /*#__PURE__*/_jsxDEV(Typography.Paragraph, {\n        type: \"secondary\",\n        ellipsis: {\n          rows: 2\n        },\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = TaskboardItemCard;\nexport default TaskboardItemCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"TaskboardItemCardTitle\");\n$RefreshReg$(_c3, \"DeleteMenuItem\");\n$RefreshReg$(_c4, \"TaskboardItemCard\");","map":{"version":3,"sources":["/home/amasuo/Front-TODO/src/taskboard/TaskboardItemCard.tsx"],"names":["React","Button","Card","Modal","Typography","Dropdown","Menu","DeleteOutlined","EditOutlined","MoreOutlined","red","styled","BaseTooltip","StyledCard","$isDragging","TaskboardItemCardTitle","Title","DeleteMenuItem","Item","primary","TaskboardItemCard","item","status","isDragging","onEdit","onDelete","title","rows","confirm","content","onOk","itemToDelete","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Card, Modal, Typography, Dropdown, Menu } from 'antd';\nimport { TaskboardItem, TaskboardItemStatus } from './TaskboardTypes';\nimport { DeleteOutlined, EditOutlined, MoreOutlined } from '@ant-design/icons';\nimport { red } from '@ant-design/colors';\nimport styled from 'styled-components';\nimport BaseTooltip from '../shared/BaseTooltip';\n\ninterface StyledCardProps {\n  $isDragging: boolean;\n}\n\nconst StyledCard = styled(Card)<StyledCardProps>`\n  margin: 0.5rem;\n  padding: 0.5rem;\n  background-color: ${({ $isDragging }) => ($isDragging ? '#fafafa' : '#fff')};\n`;\n\nconst TaskboardItemCardTitle = styled(Typography.Title)`\n  white-space: pre-wrap;\n  // To make ellipsis of the title visible.\n  // Without this margin, it can be go behind the \"extra\" component.\n  // So, we give it a little space.\n  margin-right: 0.25rem;\n`;\n\nconst DeleteMenuItem = styled(Menu.Item)`\n  color: ${red.primary};\n`;\n\nexport interface TaskboardItemCardProps {\n  item: TaskboardItem;\n  isDragging: boolean;\n  status: TaskboardItemStatus;\n  onEdit: (itemToEdit: TaskboardItem) => void;\n  onDelete: (args: {\n    status: TaskboardItemStatus;\n    itemToDelete: TaskboardItem;\n  }) => void;\n}\n\nfunction TaskboardItemCard({\n  item,\n  status,\n  isDragging,\n  onEdit,\n  onDelete,\n}: TaskboardItemCardProps) {\n  return (\n    <StyledCard\n      $isDragging={isDragging}\n      size=\"small\"\n      title={\n        <BaseTooltip overlay={item.title}>\n          {/* styled(Typography.Title) throws an error in console about \n          forwarding ref in function components.\n          Because Typography.Title doesn't accept a ref.\n          So, we just placed a span tag here. */}\n          <span>\n            <TaskboardItemCardTitle level={5} ellipsis={{ rows: 2 }}>\n              {item.title}\n            </TaskboardItemCardTitle>\n          </span>\n        </BaseTooltip>\n      }\n      extra={\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item icon={<EditOutlined />} onClick={() => onEdit(item)}>\n                Edit\n              </Menu.Item>\n              <DeleteMenuItem\n                icon={<DeleteOutlined />}\n                onClick={() =>\n                  Modal.confirm({\n                    title: 'Delete?',\n                    content: `Are you sure to delete \"${item.title}\"?`,\n                    onOk: () =>\n                      onDelete({\n                        status,\n                        itemToDelete: item,\n                      }),\n                  })\n                }\n              >\n                Delete\n              </DeleteMenuItem>\n            </Menu>\n          }\n          trigger={['click']}\n        >\n          <Button size=\"small\" icon={<MoreOutlined />} />\n        </Dropdown>\n      }\n    >\n      <BaseTooltip overlay={item.description}>\n        <Typography.Paragraph type=\"secondary\" ellipsis={{ rows: 2 }}>\n          {item.description}\n        </Typography.Paragraph>\n      </BaseTooltip>\n    </StyledCard>\n  );\n}\n\nexport default TaskboardItemCard;\n"]},"metadata":{},"sourceType":"module"}